# define the different types of combinations of the best practices that we support
use-cases:
  lambda-service:
    practices:
      - config
      - dates-and-times
      - prettier
      - testing
      - typescript
      - serverless
  lambda-service-with-rds:
    extends:
      - lambda-service
    practices:
      - persist-with-rds
  lambda-service-with-dynamodb: # note that projects can still use both by specifying the `declapract.use-case: [lambda-service-with-dynamodb, lambda-service-with-rds]` since we allow use-cases to add together. `use-cases` just enable us to enforce a "minimum" set of practices
    extends:
      - lambda-service
    practices:
      - persist-with-dynamodb
