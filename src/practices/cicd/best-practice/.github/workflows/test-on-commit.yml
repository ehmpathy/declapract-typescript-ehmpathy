name: test-on-commit

on:
  push:
    branches: # run for any branch
      - '**'
    tags-ignore: # but not for releases, as deploy_on_tag will trigger for it
      - '**'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: install
        run: npm install

      - name: cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

  # run tests in parallel
  test-commits:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: test:commits
        run: npm run test:commits

  test-types:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: test:types
        run: npm run test:types

  test-format:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: test:format
        run: npm run test:format

  test-lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: test:lint
        run: npm run test:lint

  test-unit:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: test:unit
        run: npm run test:unit

  test-integration:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        id: credentials
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: confirm aws credentials
        run: |
          [[ ${{steps.credentials.outputs.aws-account-id}} != '@declapract{variable.awsAccountId.dev}' ]] \
            && echo 'wrong aws account' && exit 1 \
            || echo 'correct aws account';

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: provision:integration-test-db
        run: npm run provision:integration-test-db

      - name: test:integration
        run: npm run test:integration

  test-acceptance-locally:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        id: credentials
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: confirm aws credentials
        run: |
          [[ ${{steps.credentials.outputs.aws-account-id}} != '@declapract{variable.awsAccountId.dev}' ]] \
            && echo 'wrong aws account' && exit 1 \
            || echo 'correct aws account';

      - name: grab node_modules from cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ github.sha }}

      - name: provision:integration-test-db
        run: npm run provision:integration-test-db

      - name: test:acceptance:locally
        run: npm run test:acceptance:locally

  check-provisions-github:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./provision/github/environment
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        id: credentials
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: confirm aws credentials
        run: |
          [[ ${{steps.credentials.outputs.aws-account-id}} != '398838478359' ]] \
            && echo 'wrong aws account' && exit 1 \
            || echo 'correct aws account';

      - name: terraform init
        id: init
        run: terraform init

      - name: terraform validate
        id: validate
        run: terraform validate -no-color

      - name: terraform plan
        id: plan
        run: terraform plan -no-color -detailed-exitcode && [ $? -eq 2 ] && exit 1 || exit 0
        env:
          GITHUB_TOKEN: ${{ secrets.PROVISION_GITHUB_GITHUB_TOKEN }}
